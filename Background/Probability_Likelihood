{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\\textit{Vasileios Tsakalos}$$                            \n",
    "\n",
    "# Rules of Probability\n",
    "\n",
    "Probabilities  are  defined  for  events.   An  event  is  some  outcome  that  we  could  potentially or  hypothetically  observe or  experience. Let event $A$, we will denote its probability $P(A)$ or $P(X = A)$.\n",
    "\n",
    "* Probabilities properties : \n",
    "    1. they are between zero and one, i.e., $0 \\leqslant P(A)\\leqslant 1$ for any event A.\n",
    "    2. they add to one, i.e., if  we  add  up  the  probabilities  of  all  possible  events ,  those probabilities must add to one. $\\sum_{i=1}^{n} P(X = i) = 1$\n",
    "    3. The complement of an event $A (A^{C}$) means that the event doesn't happen,  therefore can be defined as $P(A^{C}) = 1 - P(A)$\n",
    "    4. The probability of 2 events A and B happening (this is an inclusive) is the probability of the union of the events: $$P(A \\cup B) = P(A) + P(B) - P(A \\cap B)$$.\n",
    "    5. If a set of events A_{i} are mutually exclusive (only one can happen), then $P(\\bigcup_{i=1}^{m} A_{i}) = \\sum_{i=1}^{m} P(A_{i})$.\n",
    "\n",
    "Let A be the event that we roll a “4” on a fair six-sided die and B the event that we roll a \"6\" with the same die. Find the probability of the event A or event B."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] 0.3333333\n"
     ]
    }
   ],
   "source": [
    "p_b = 1/6 # probability of event B occuring\n",
    "p_a = 1/6 # probability of event A occuring\n",
    "p_a_and_b = 0 # probability of event B AND A occuring, it is 0 because A and B are mutually exclusive\n",
    "p_a_or_b = p_a + p_b + p_a_and_b # probability of event B OR A occuring\n",
    "print(p_a_or_b)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Odds\n",
    "\n",
    "Probabilities can be re-expressed in terms of odds. \n",
    "The odds for event A, denoted $O(A)$ is defined as $O(A) = \\dfrac{P(A)}{P(A^{C})}$\n",
    "\n",
    "Suppose again that we denote rolling a “4” on a fair six-sided die as the event $A$."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] 0.2\n"
     ]
    }
   ],
   "source": [
    "o_a = p_a/(1-p_a)\n",
    "print(o_a)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This can also be expressed as 1:5 (or 5:1 “odds against”).  Thus, an event with probability $\\dfrac{3}{10}$ has 3:7 odds (7:3 odds against) and an event with probability  $\\dfrac{4}{5}$ has 4:1 odds.\n",
    "\n",
    "Note that we can also calculate probabilities from odds.  If an event $B$ has $a:b$ odds (with a > 0 and b > 0), then $\\dfrac{P(B)}{1−P(B)} = \\dfrac{a}{b} \\Rightarrow P(B)·b=a−P(B)\\times·a \\Rightarrow P(B)=\\dfrac{a}{a+b}$.\n",
    "\n",
    "Calculate, an event with 2:5 odds has probability."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] 0.2857143\n"
     ]
    }
   ],
   "source": [
    "a <- 2\n",
    "b <- 5\n",
    "p_b <- a/(a + b)\n",
    "print(p_b)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Indicator Functions\n",
    "\n",
    "The concept of an indicator function is a really useful one.  This is a function that takes the value one if its argument is true, and the value zero if its argument is false.  Sometimes these functions are called Heaviside functions or unit step functions.\n",
    "\n",
    "Indicator functions are always first in the order of operations— if the indicator function is zero, you don’t try to evaluate the rest of the expression.  When taking derivatives they just go along for the ride.  When taking integrals, they may affect the range over which the integral is evaluated.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Descriptive measures\n",
    "## Expectation\n",
    "\n",
    "The expected value of a random variable $X$ is a weighted average of values $X$ can take, with weights given by the probabilities of those values.  If $X$ can take on only a finite number of values (say,$x_1, x_2, \\dots x_n$), we can calculate the expected value as $$E(x) = \\sum_{i=1}^{n} x_i P(x_i) = \\sum_{i=1}^{n} x_i f(x_i) $$\n",
    "\n",
    "If $X$ is  a  continuous  random  variable  with  probability  density  function  (PDF) $f(x)$,  we\n",
    "replace the summation with an integral: $$E(x) = \\int_{-\\infty}^{\\infty} x f(x) dx$$\n",
    "\n",
    "One useful property of expected values is that they are easy to compute for linear functions\n",
    "of random variables. Let $Z = \\alpha X + \\beta Y + c$, $E(X) = \\mu_X$, $E(Y) = \\mu_Y$, the expected value for $Z$ will be $E(Z) = \\alpha E(X) + \\beta E(Y) + c$.\n",
    "\n",
    "It is also feasible to compute the expected value from a function of X. Let $g(X) = \\dfrac{X + 3}{2}$ , the expected value of $g(X)$ will be: $$ E(g(X)) = \\int_{-\\infty}^{\\infty} g(x) f(x) dx = \\int_{-\\infty}^{\\infty} \\dfrac{x + 3}{2} f(x) dx$$\n",
    "\n",
    "**Be careful**, don't make the assumption $E(g(X)) = g(E(X))$.\n",
    "\n",
    "Find the expected value of a die."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] 3.5\n"
     ]
    }
   ],
   "source": [
    "x <- c(1, 2, 3, 4, 5, 6) # possible values of the die\n",
    "e_x = sum(x * (1/6))\n",
    "print(e_x)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Variance \n",
    "\n",
    "The variance of random variable measures how spread out its values are.  If $X$ is a random variable  with mean\n",
    "$E(X) = \\mu$, then the variance is  $E[(X−\\mu)^2]$. In words, the variance is the expected value of the squared deviation of $X$ from its mean. If $X$ is discrete, this is calculated as: $$Var(X) = \\sum_{\\chi} (\\chi - \\mu)^2 P(X = \\chi)$$\n",
    "\n",
    "and if $X$ is continuous: $$Var(X) = \\int_{-\\infty}^{\\infty} (\\chi - \\mu)^2 P(X = \\chi)$$\n",
    "\n",
    "For  both  discrete  and  continuous $X$, a convenient formula for the variance is $$Var(X) = E[X^2]−(E[X])^2$$.  The square root of variance is called the standard deviation. Variance has a linear property similar to expectation.  Again, let $X$ and $Y$ be random variables with $Var(X) = \\sigma^2_X$ and $Var(Y) = \\sigma^2_Y$. It is also necessary to assume that $X$ and $Y$ are independent. Suppose we are interested in a new random variable $Z = aX + bY + c$ where a, b, and c are any real constants.  \n",
    "\n",
    "The variance of $Z$ is then $Var(Z) = Var(aX + bY + c) = a^2 Var(X) + b^2 Var(Y) + 0 = a^2\\sigma^2_X + b^2 \\sigma^2_Y$. Because $c$ is constant, it has variance 0.\n",
    "\n",
    "** Exercise** \n",
    "\n",
    "Let random variable $X$ with PDF $f(X) = X^2 I_{\\{0 < x < 1\\}}$, find its variance:\n",
    "\n",
    "$$E(X) =  \\int_{-\\infty}^{\\infty}xx^2 I_{\\{0 < x < 1\\}}dx = \\int_{0}^{1}xx^2 dx = \\int_{0}^{1} x^3 dx = \\dfrac{x^4}{4}\\bigg\\rvert_{x = 0}^{x =1} = \\dfrac{(1-0)}{4} = \\dfrac{1}{4}$$\n",
    "\n",
    "$$E(X^2) =  \\int_{-\\infty}^{\\infty}x^2 x^2 I_{\\{0 < x < 1\\}}dx = \\int_{0}^{1}x^2 * x^2 dx = \\int_{0}^{1} x^4 dx = \\dfrac{x^5}{5}\\bigg\\rvert_{x = 0}^{x =1} = \\dfrac{(1-0)}{5} = \\dfrac{1}{5}$$\n",
    "\n",
    "$$Var(X) = E[X^2] + (E[X])^2 = \\dfrac{1}{5} + \\dfrac{1}{16} = \\dfrac{21}{80} $$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] 2.916667\n"
     ]
    }
   ],
   "source": [
    "var_x = sum(1/6* (x - e_x)**2 )\n",
    "print(var_x)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "# Likelihood and Maximum Likelihood Estimation\n",
    "\n",
    "## Likelihood\n",
    "\n",
    "### Definition\n",
    "Likelihood is a function of the parameters of a statistical model given data. \n",
    "\n",
    "### Example\n",
    "Consider a hospital where 400 patients are admitted over a month for heart attacks, and a month later 72 of them have died and 328 of them have survived. We can say each patient comes from a Bernoulli distribution with unknown parameter $\\theta$. Let's estimate the unknown parameter using the data we have. \n",
    "\n",
    "$P(Y_{i} = 1) = \\theta$, where sucess is mortality\n",
    "\n",
    "The probability density function for all patients can be written as $$P(Y = y | \\theta) = P(Y_{1} = y_{1}, Y_{2} = y_{2} \\dots Y_{n} = y_{n}| \\theta) $$ $$= P(Y_{1} = y_{1}) \\dots P(Y_{n} = y_{n} | \\theta)$$\n",
    "$$= \\prod_{i=1}^{n} P(Y_{i} = y_{i} | \\theta) = \\prod_{i=1}^{n}\\theta ^{y_{i}}(1 - \\theta)^{1 - y_{i}}$$\n",
    "\n",
    "We can now think about this expression as a function of theta. This is a concept of a **likelihood**. So we can write it as: $$ L(\\theta | y) = \\prod_{i=1}^{n}\\theta ^{y_{i}}(1 - \\theta)^{1 - y_{i}}    ,\\ where \\   y=\\begin{bmatrix}\n",
    "         y_{1} &   y_{2} & \\dots &{y}_{n} \n",
    "         \\end{bmatrix}^{T}$$\n",
    "         \n",
    "One way to estimate $\\theta$ is that we choose the $\\theta$ that gives us the largest value of the likelihood. It makes the data the most likely to occur for the particular data we observed. \n",
    "This is referred to as the **maximum likelihood estimate**, or MLE, maximum likelihood estimate.\n",
    "\n",
    "## Maximum Likelihood Estimate \n",
    "\n",
    "### Definition \n",
    "**MLE** is a method of estimating the parameters of a statistical model given observations, by finding the parameter values that maximize the likelihood of making the observations given the parameters.\n",
    "\n",
    "$$ \\hat{\\theta} = argmax L(\\theta|y)$$\n",
    "\n",
    "In practice it is easier to maximize the natural logarithm of the likelihood, referred as **log likelihood**.\n",
    "$$l(\\theta) = \\log(L(\\theta |y))$$\n",
    "\n",
    "We usually drop the conditional notation on y as well. \n",
    "\n",
    "Since the logarithm is a monotone function, if we maximize the logarithm of the function, we also maximize the original function. \n",
    "\n",
    "Why did you say that it is easier to maximize the natural logarithm? \n",
    "\n",
    "$$l(\\theta) = \\log(L(\\theta |y))$$\n",
    "$$= \\log(\\prod_{i=1}^{n}\\theta ^{y_{i}}(1 - \\theta)^{1 - y_{i}})$$\n",
    "$$ = \\sum \\log(\\theta ^{y_{i}}(1 - \\theta)^{1 - y_{i}})$$\n",
    "$$= \\sum [y_{i}\\log \\theta + (1 - y_{i})\\log(1 - \\theta))]$$\n",
    "$$= (\\sum y_{i}) \\log \\theta + (\\sum(1-y_{i}) \\log(1-\\theta))$$\n",
    "\n",
    "\n",
    "How do we find the theta that maximizes this function? \n",
    "\n",
    "We can maximize a function by taking the derivative and setting it equal to 0. \n",
    "\n",
    "$$l'(\\theta) = \\dfrac{1}{\\theta}\\sum y_{i} - \\dfrac{1}{1-\\theta} \\sum(1-y_{i} = 0$$\n",
    "$$\\Rightarrow \\dfrac{\\sum y_{i} }{\\hat{\\theta}} = \\dfrac{\\sum(1-y_{i})}{1-\\hat{\\theta}} $$\n",
    "$$\\Rightarrow \\hat{\\theta} = \\dfrac{\\sum y_{i}}{n} $$\n",
    "\n",
    "Let's go back to our hospital example. What is the $\\hat{\\theta}$ ? \n",
    "$$\\hat{\\theta} = \\dfrac{72}{400} = 0.18$$\n",
    "\n",
    "Notice that MLE have many desirable mathematical properties. They're **unbiased**, they're **consistent**, and they're **invariant**. \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nrkJggg==",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's see how the likelihood seems for the different values of theta\n",
    "likelihood <- function(n, y, theta){return(theta^y*(1-theta)^(n-y))}\n",
    "theta <- seq(from = 0.01, to = 0.99, by = 0.01)\n",
    "plot(theta, likelihood(400, 72, theta))\n",
    "abline(v = 72/400) # To make clear where is the MLE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nAElFTkSuQmCC",
      "text/plain": [
       "plot without title"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Let's take a look for the log likelihood\n",
    "loglikelihood = function(n, y, theta){return(y*log(theta)+(n-y)*log(1 - theta))}\n",
    "plot(theta, loglikelihood(400, 72, theta))\n",
    "abline(v = 72/400)# MLE"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "3.3.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
